SearchEntryPanel.jFileChooser1.toolTipText=
SearchEntryPanel.jFileChooser1.dialogTitle=Select folder to look in
SearchEntryPanel.jFileChooser1.approveButtonToolTipText=Click to select base folder
SearchEntryPanel.jFileChooser1.approveButtonText=OK
SearchEntryPanel.jPanel1.border.title=General:
SearchEntryPanel.jUseContentRegex.toolTipText=If checked, content searching will use regular expression syntax
SearchEntryPanel.jUseContentRegex.text=Search file content using regular expressions
SearchEntryPanel.jUseContentSearch.toolTipText=If checked, content searching will match the exact string entered
SearchEntryPanel.jUseContentSearch.text=Search file content using key words
SearchEntryPanel.jPanel15.border.title=Content Options
SearchEntryPanel.jUseFileGlobs.text=Search filenames using wildcards e.g. *.txt
SearchEntryPanel.jIgnoreHiddenFolders.text=Ignore hidden folders
SearchEntryPanel.jUseFileRegex.text=Search filenames using regular expressions
SearchEntryPanel.jIgnoreHiddenFiles.text=Ignore hidden files
SearchEntryPanel.jIgnoreSymbolicLinks.text=Ignore symbolic links and shortcuts
SearchEntryPanel.jPanel14.border.title=Filename Options
SearchEntryPanel.jOptions.TabConstraints.tabTitle=Options
SearchEntryPanel.jSubFolders.toolTipText=If checked, recurse sub-directories as well as the starting folder.
SearchEntryPanel.jSubFolders.text=Including subdirectories
SearchEntryPanel.jLabel2.text=Look in:
SearchEntryPanel.jCheckBox2.text=Containing this text:
SearchEntryPanel.jBasicSearch.AccessibleContext.accessibleName=Find:
SearchEntryPanel.jBasicSearch.border.title=
SearchEntryPanel.jSearch.TabConstraints.tabTitle=Search
SearchEntryPanel.jScrollPane1.TabConstraints.tabTitle=Search
SearchEntryPanel.jScrollPane2.TabConstraints.tabTitle=Options
SearchEntryPanel.jCheckBox2.toolTipText=If checked, find files that match the following regular expression.
SearchEntryPanel.jCheckBox2.label=Containing this regular expression:
SearchEntryPanel.jContainingText.toolTipText=Enter content to match, or use a regular expression to power match
SearchEntryPanel.jLookIn.toolTipText=Select the folder to search within
SearchEntryPanel.jLabel3.text=File name:
SearchEntryPanel.jFileName1.toolTipText=Enter a partial filename or regular expression to match
SearchEntryPanel.jContainingText1.toolTipText=Enter content to match, or use a regular expression to power match
SearchEntryPanel.jCheckBox3.label=Containing this regular expression:
SearchEntryPanel.jCheckBox3.toolTipText=If checked, find files that match the following regular expression.
SearchEntryPanel.jCheckBox2.text_1=Containing:
SearchEntryPanel.jCheckBox3.text=Containing:
SearchEntryPanel.jLabel1.text=File name:
SearchEntryPanel.jFileName.toolTipText=Enter a partial filename or wildcard to match
SearchEntryPanel.jPanel16.border.title=Folder Options
SearchEntryPanel.jDisable3rdParty.text=Disable 3rd party content searching
SearchEntryPanel.jDisableUnicodeDetection.text=Disable unicode detection algorithm
SearchEntryPanel.jExpertMode.text=Use power search
SearchEntryPanel.jSkipBinaryFiles.text=Skip binary files
SearchEntryPanel.jMaxHits.toolTipText=Stop searching once the hit count reaches this number. Use this setting to make searching faster.
SearchEntryPanel.jLimitMaxHits.toolTipText=If checked, hits will be limited to the number set
SearchEntryPanel.jLimitMaxHits.text=Limit hits to this value:
SearchEntryPanel.jLimitMaxRecurse.toolTipText=If checked, the maximum recurse depth will be limited to this value.
SearchEntryPanel.jLimitMaxRecurse.text=Limit recurse depth to this value:
SearchEntryPanel.jMaxRecurse.toolTipText=If enabled, this will set the maximum recurse depth.
SearchEntryPanel.jManageSkipFolders.toolTipText=Click this to restore all defaults.
SearchEntryPanel.jManageSkipFolders.text=Manage folders that will always be skipped
SearchEntryPanel.jIgnoreFilenameCase.toolTipText=If checked, filename searching will be case insensitive
SearchEntryPanel.jIgnoreFilenameCase.text=Use case insensitive searching
SearchEntryPanel.jIgnoreContentCase.toolTipText=If checked, content searching will be case insensitive
SearchEntryPanel.jIgnoreContentCase.text=Use case insensitive searching
SearchEntryPanel.jIgnoreFolderCase.toolTipText=If checked, folder names will be treated as case insensitive
SearchEntryPanel.jIgnoreFolderCase.text=Ignore case
SearchEntryPanel.jRestoreAll.toolTipText=Restore all defaults to the options and search parameters.
SearchEntryPanel.jRestoreAll.text=Restore default options
SearchEntryPanel.jDisable3rdParty.toolTipText=If checked, 3rd party plugins (e.g DOCX, PDF and ODT files) will be disabled.
SearchEntryPanel.jDisableUnicodeDetection.toolTipText=If checked, all documents will be opened using the default file format, which is typically UTF-8.
SearchEntryPanel.jExpertMode.toolTipText=If checked, advanced power searching will be used.
SearchEntryPanel.jUseFileRegex.toolTipText=If checked, filename searching will use regular expression syntax.
SearchEntryPanel.jUseFileGlobs.toolTipText=If checked, filename searching will use glob or wildcard based searching
SearchEntryPanel.jIgnoreHiddenFiles.toolTipText=If checked, hidden files will be ignored
SearchEntryPanel.jIgnoreSymbolicLinks.toolTipText=If checked, hidden links and shortcut files will be ignored
SearchEntryPanel.jSkipBinaryFiles.toolTipText=If checked, files that are marked as executable will be skipped
SearchEntryPanel.jIgnoreHiddenFolders.toolTipText=If checked, folders marked as hidden will be skipped.
SearchEntryPanel.jEnableFileTimeout.actionCommand=File decode timeout (ms):
SearchEntryPanel.jEnableFileTimeout.toolTipText=If checked, set the maximum file decode time in milliseconds before aborting file read. This ensures that Searchmonkey remains responsive at all times.
SearchEntryPanel.jEnableFileTimeout.text=File decode timeout (ms):
SearchEntryPanel.jFileTimeout.toolTipText=When enabled, this timeout in milliseconds will cut short if files take too long to decode. Increasing the timeout will allow more files to be found.
SearchEntryPanel.jLabel4.text=Mime type:
SearchEntryPanel.jPanel7.border.title=Advanced
SearchEntryPanel.jLabel5.text=Modified:
SearchEntryPanel.jLabel6.text=Created:
SearchEntryPanel.jLabel7.text=Accessed:
SearchEntryPanel.jLabel8.text=Search history limit:
SearchEntryPanel.jStrictFilenameSearch.text=Enforce strict filename searching
SearchEntryPanel.jStrictFilenameSearch.toolTipText=If checked, glob or regex rules will be strictly enforced. If unchecked, the search will be more relaxed.
SearchEntryPanel.jStartButton.toolTipText=Click to start a new search
SearchEntryPanel.jStartButton.text=Start
SearchEntryPanel.jStopButton.toolTipText=Click to cancel a search in progress
SearchEntryPanel.jStopButton.text=Stop
SearchEntryPanel.jMoreThanCheck.text=Greater than:
SearchEntryPanel.jMoreThanCheck.toolTipText=If checked, the date shown will be used
SearchEntryPanel.jLessThanCheck.text=Less than:
SearchEntryPanel.jLessThanCheck.toolTipText=If checked, the date shown will be used
SearchEntryPanel.jGreaterThanSpinner.toolTipText=Enter the file size. You can enter whole numbers of real numbers.
SearchEntryPanel.jLessThanSpinner.toolTipText=Enter the file size. You can enter whole numbers of real numbers.
SearchEntryPanel.jFileSizeScaler1.toolTipText=Select the unit size
SearchEntryPanel.jFileSizeScaler.toolTipText=Select the unit size
SearchEntryPanel.jModifiedAfterCheck.text=After:
SearchEntryPanel.jModifiedBeforeCheck.text=Before:
SearchEntryPanel.jModifiedBeforeCheck.toolTipText=If checked, then the date shown will be used.
SearchEntryPanel.jModifiedAfterCheck.toolTipText=If checked, then the date shown will be used.
SearchEntryPanel.jAfterSpinner.toolTipText=Enter the date/time. Right-click to bring up a context menu.
SearchEntryPanel.jBeforeSpinner.toolTipText=Enter the date/time. Right-click to bring up a context menu.
SearchEntryPanel.jAfter.toolTipText=Click to open the calendar helper.
SearchEntryPanel.jBefore.toolTipText=Click to open the calendar helper.
SearchEntryPanel.jLabel9.text=File size:
Searchmonkey.saveAsMenuItem.text=Save As ...
Searchmonkey.saveMenuItem.text=Save
Searchmonkey.openMenuItem.text=Open
Searchmonkey.aboutMenuItem.text=About
Searchmonkey.contentMenuItem.text=Contents
Searchmonkey.jSplitPane1.toolTipText=
Searchmonkey.title=Searchmonkey - power searching without the pain
Searchmonkey.fileMenu.text=File
Searchmonkey.helpMenu.text=Help
Searchmonkey.jColoumnsMenu.text=Columns
Searchmonkey.jRightToLeft.text=Right-to-left
Searchmonkey.jLeftToRight.text=Standard
Searchmonkey.jButton2.toolTipText=Cancel search
Searchmonkey.jLayoutMenu.text=Layout
Searchmonkey.jButton1.toolTipText=Start search
Searchmonkey.showToolbar.text=Show toolbar
Searchmonkey.jButton3.toolTipText=Test Regex Expression
Searchmonkey.jButton3.text=Test Expression
Searchmonkey.showStatusbar.text=Show status bar
Searchmonkey.viewMenu.text=View
Searchmonkey.jMenuItem1.text=Test Expression
Searchmonkey.toolMenu.text=Tools
Searchmonkey.deleteMenuItem.text=Delete
Searchmonkey.pasteMenuItem.text=Paste
Searchmonkey.copyMenuItem.text=Copy
Searchmonkey.cutMenuItem.text=Cut
Searchmonkey.editMenu.text=Edit
Searchmonkey.exitMenuItem.text=Exit
About.jLabel1.toolTipText=http://searchmonkey.embeddediq.com
About.jLabel2.text=<html><h1>Welcome!</h1><p><b>JAVA Searchmonkey</b> is a powerful desktop tool for finding files and their content using regular expressions. Searchmonkey combines the power of find/grep and can look inside most text files including PDF, DOCX, XLSX, ODT, and much more besides.</p><br/> <p>To learn more about what Searchmonkey can do for you, then visit our web page: <a href="http://searchmonnkey.embeddediq.com">http://searchmonnkey.embeddediq.com</a></p></html>
About.jTextPane2.text=<html><h3>JAVA Searchmonkey v3.3.0</h3> <p>JAVA Searchmonkey is copyright Adam Cottrell <a href="mailto:searchmonkey@embededdiq.com?Subject=JAVA Searchmonkey">searchmonkey@embededdiq.com</a>. Searchmonkey is open source and released under the GPL license</p><br/> <p>For help and support <a href="http://searchmonnkey.embeddediq.com/forum">visit our forum</a>. <a href="http://searchmonnkey.embeddediq.com/downloads">Download the latest Searchmonkey</a></p> </html>
CalendarPanel.jMenuItem7.text=Set last decade
CalendarPanel.jPrevYear.text=<<
CalendarPanel.jMenuItem6.text=Set last year
CalendarPanel.jMenuItem5.text=Set last quarter
CalendarPanel.jNextYear.text=>>
CalendarPanel.jMenuItem4.text=Set last month
CalendarPanel.jNext.text=>
CalendarPanel.jMenuItem3.text=Set last week
CalendarPanel.jMenuItem2.text=Set yesterday
CalendarPanel.jLabel1.text=December 2017
CalendarPanel.jMenuItem1.text=Set today
CalendarPanel.jPrev.text=<
FileDatePanel.jMenuItem7.text=Set last decade
FileDatePanel.jMenuItem6.text=Set last year
FileDatePanel.jMenuItem5.text=Set last quarter
FileDatePanel.jMenuItem4.text=Set last month
FileDatePanel.jMenuItem3.text=Set last week
FileDatePanel.jMenuItem2.text=Set yesterday
FileDatePanel.jMenuItem1.text=Set today
FileDatePanel.jLabel1.text=<html><p>Setting these date constraints can help to increase the speed of searching because Searchmonkey can simply skip the very old or very new files.</p><br/><p>If one option is checked, then the other constraint will be set to: <em>don't care</em>. You can specify a range, for example <em>between 1st March and 31st March 2018</em>. However, if you want the opposite, then this too is possible, for example <em>before 1st March OR after 31st March 2018</em>. Or you can just use one constraint, for example <em>before 31st March</em></p></html>
FileSizePanel.jLabel1.text=<html><p>Setting these file size constraints size can help to increase the speed of searching because Searchmonkey can simply skip the very large or very small files.</p><br/><p>If one option is checked, then the other constraint will be set to: <em>don't care</em>. You can specify a range, for example <em>between 3 KBytes and 10 Mbytes</em>. However, if you want the opposite, then this too is possible, for example <em>greater than 10 MBytes OR less than 3 Kbytes</em>. Or you can just use one constraint, for example <em>Less than 5 MBytes</em></p></html>
FileTypePanel.jLabel1.text=<html><p>Setting the file type constraint can help to increase the speed of searching because Searchmonkey will choose files that match the selected MIME type.</p><br/><p>The mime will be pattern matched such that /text will match both /text/xml and /text/html mimes. Alternatively, if the pattern is /app/*/odt then the pattern will match entries such as /app/ms/odt and /app/adobe/odt</p></html>
FileTypePanel.jTextField1.text=jTextField1
SearchMatchView.jScrollPane3.TabConstraints.tabTitle=Hits
SearchMatchView.jScrollPane1.TabConstraints.tabTitle=Summary
SearchMatchView.jMenuItem2.toolTipText=
SearchMatchView.jMenuItem2.text=Select all
SearchMatchView.jMenuItem1.toolTipText=
SearchMatchView.jMenuItem1.text=Copy
SearchMatchView.jPreviewTextPane.toolTipText=
SearchMatchView.jScrollPane4.TabConstraints.tabTitle=Preview
SearchMatchView.jHitsTextPane.toolTipText=
SearchResultsTable.jOpen.text=Open file
SearchResultsTable.jPopupMenu1.label=Hello
SearchResultsTable.jColumnMenu.toolTipText=Show or hide columns in this table
SearchResultsTable.jColumnMenu.text=Show/Hide Columns
SearchResultsTable.jBrowse.toolTipText=Open file navigator to browse the folder containing this file
SearchResultsTable.jBrowse.text=Browse folder
SearchResultsTable.jEdit.toolTipText=Edit select file or files using the default editor
SearchResultsTable.jEdit.text=Edit file
SearchResultsTable.jOpen.toolTipText=Open selected file or files using the application associated with this file type
SearchSummaryPanel.jSearchSummary.text=Found: 16 items (300 MB)
SearchSummaryPanel.jProgressBar1.toolTipText=
SearchSummaryPanel.jStatus.text=Ready
SearchSummaryPanel.jSearchSelect.text=Selected: One item (2 MB)
TestExpression.jTextPane3.toolTipText=
TestExpression.jCheat.TabConstraints.tabTitle=Cheat Sheet
TestExpression.jReferenceList.toolTipText=Click on item to select
TestExpression.jReferencePage.toolTipText=
TestExpression.jReferencePage.text=
TestExpression.jReference.TabConstraints.tabTitle=Reference
TestExpression.jLabel2.text=Expression
TestExpression.jLabel3.text=Text
TestExpression.jResetLatin.text=Lorem ipsum..
TestExpression.jTextPane2.toolTipText=Enter sample text or copy in from a file to test expression
TestExpression.jTextPane2.text=<Enter sample text here to test regular expression>
TestExpression.jMenu1.text=Reset
TestExpression.jPaste.text=Paste
TestExpression.jCopy.text=Copy
TestExpression.jCut.text=Cut
TestExpression.jHelpPage1.toolTipText=
TestExpression.jHelpPage1.text=<html>\n    <head>\n        <style type="text/css">\n            table {\n                width: 100%\n            }\n            td, th {\n                background-color: #112233\n            }\n        </style>\n    </head>\n    <body>\n        HTML table test:\n        <div style="background-color: black">\n            <table border="0" cellpadding="2" cellspacing="1">\n                <tr>\n                    <td>cell1</td>\n                    <td>cell2</td>\n                </tr>\n                <tr>\n                    <td>cell3</td>\n                    <td>cell4</td>\n                </tr>\n        </div>\n    </body>\n</html>
TestExpression.jLabel1.text=<html><p>Enter a test expression and the syntax will automatically highlight the text within the search panel.</p>\n<p>If you would like to understand more about Regular Exressions then check out the Reference Manual or the Cheat Sheet.</p>\n<p>The current regular expression settings are shown here:-</p>\n</html>
TestExpression.jTopMenu.TabConstraints.tabTitle=Help
TestExpression.jStatus.text=Status
