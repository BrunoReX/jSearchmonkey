/*
 * Copyright (C) 2018 cottr
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.embeddediq.searchmonkey;

import java.util.Date;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author cottr
 */
public class FileDatePanel extends javax.swing.JPanel {

    /**
     * Creates new form FileDatePanel
     */
    public FileDatePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jModifiedDate = new javax.swing.JPanel();
        jBeforeSpinner = new javax.swing.JSpinner();
        jToolBar4 = new javax.swing.JToolBar();
        jBefore = new javax.swing.JButton();
        jModifiedBeforeCheck = new javax.swing.JCheckBox();
        jAfterSpinner = new javax.swing.JSpinner();
        jToolBar5 = new javax.swing.JToolBar();
        jAfter = new javax.swing.JButton();
        jModifiedAfterCheck = new javax.swing.JCheckBox();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/embeddediq/searchmonkey/Bundle"); // NOI18N
        jModifiedDate.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("SearchEntryPanel.jModifiedDate.border.title"))); // NOI18N

        jBeforeSpinner.setModel(new javax.swing.SpinnerDateModel());
        jBeforeSpinner.setToolTipText(bundle.getString("SearchEntryPanel.jBeforeSpinner.toolTipText")); // NOI18N
        jBeforeSpinner.setEnabled(false);

        jToolBar4.setFloatable(false);
        jToolBar4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar4.setRollover(true);
        jToolBar4.setBorderPainted(false);

        jBefore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.png"))); // NOI18N
        jBefore.setToolTipText(bundle.getString("SearchEntryPanel.jBefore.toolTipText")); // NOI18N
        jBefore.setBorderPainted(false);
        jBefore.setFocusable(false);
        jBefore.setHideActionText(true);
        jBefore.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBefore.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jBefore.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar4.add(jBefore);

        jModifiedBeforeCheck.setText(bundle.getString("SearchEntryPanel.jModifiedBeforeCheck.text")); // NOI18N
        jModifiedBeforeCheck.setToolTipText(bundle.getString("SearchEntryPanel.jModifiedBeforeCheck.toolTipText")); // NOI18N
        jModifiedBeforeCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jModifiedBeforeCheckItemStateChanged(evt);
            }
        });

        jAfterSpinner.setModel(new javax.swing.SpinnerDateModel());
        jAfterSpinner.setToolTipText(bundle.getString("SearchEntryPanel.jAfterSpinner.toolTipText")); // NOI18N
        jAfterSpinner.setEnabled(false);

        jToolBar5.setFloatable(false);
        jToolBar5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar5.setRollover(true);
        jToolBar5.setBorderPainted(false);

        jAfter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.png"))); // NOI18N
        jAfter.setToolTipText(bundle.getString("SearchEntryPanel.jAfter.toolTipText")); // NOI18N
        jAfter.setFocusable(false);
        jAfter.setHideActionText(true);
        jAfter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jAfter.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jAfter.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar5.add(jAfter);

        jModifiedAfterCheck.setText(bundle.getString("SearchEntryPanel.jModifiedAfterCheck.text")); // NOI18N
        jModifiedAfterCheck.setToolTipText(bundle.getString("SearchEntryPanel.jModifiedAfterCheck.toolTipText")); // NOI18N
        jModifiedAfterCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jModifiedAfterCheckItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jModifiedDateLayout = new javax.swing.GroupLayout(jModifiedDate);
        jModifiedDate.setLayout(jModifiedDateLayout);
        jModifiedDateLayout.setHorizontalGroup(
            jModifiedDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jModifiedDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jModifiedDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jModifiedBeforeCheck)
                    .addComponent(jModifiedAfterCheck)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jModifiedDateLayout.createSequentialGroup()
                        .addGroup(jModifiedDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jAfterSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBeforeSpinner))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jModifiedDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jModifiedDateLayout.setVerticalGroup(
            jModifiedDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jModifiedDateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jModifiedBeforeCheck)
                .addGap(0, 0, 0)
                .addGroup(jModifiedDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBeforeSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jModifiedAfterCheck)
                .addGap(0, 0, 0)
                .addGroup(jModifiedDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAfterSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jModifiedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jModifiedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jModifiedBeforeCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jModifiedBeforeCheckItemStateChanged
        this.jBeforeSpinner.setEnabled(jModifiedBeforeCheck.isSelected());
    }//GEN-LAST:event_jModifiedBeforeCheckItemStateChanged

    private void jModifiedAfterCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jModifiedAfterCheckItemStateChanged
        this.jAfterSpinner.setEnabled(jModifiedAfterCheck.isSelected());
    }//GEN-LAST:event_jModifiedAfterCheckItemStateChanged

    public String getString()
    {
        String before = null;
        if (jModifiedBeforeCheck.isSelected())
        {
            Date d = ((SpinnerDateModel)jBeforeSpinner.getModel()).getDate();
            before = d.toString();
        }
        String after =  null;
        if (jModifiedAfterCheck.isSelected())
        {
            Date d = ((SpinnerDateModel)jAfterSpinner.getModel()).getDate();
            after = d.toString();
        }
        if (before != null && after != null)
        {
            return String.format("Between %s and %s", before, after);
        }
        else if (before != null)
        {
            return String.format("Before %s", before);
            
        } else if (after != null)
        {
            return String.format("After %s", after);
        }
        return "On any date";
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAfter;
    private javax.swing.JSpinner jAfterSpinner;
    private javax.swing.JButton jBefore;
    private javax.swing.JSpinner jBeforeSpinner;
    private javax.swing.JCheckBox jModifiedAfterCheck;
    private javax.swing.JCheckBox jModifiedBeforeCheck;
    private javax.swing.JPanel jModifiedDate;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    // End of variables declaration//GEN-END:variables
}
